#include <iostream>
using namespace std;

int merge(int arr[], int temp[], int low, int mid, int high, int& comparisons) {
    int i = low;
    int j = mid + 1;
    int k = low;
    int inversions = 0;

    while (i <= mid && j <= high) {
        if (arr[i] <= arr[j]) {
            temp[k++] = arr[i++];
        } else {
            temp[k++] = arr[j++];
            inversions += mid - i + 1; // Counting inversions
        }
        comparisons++;
    }

    while (i <= mid) {
        temp[k++] = arr[i++];
    }

    while (j <= high) {
        temp[k++] = arr[j++];
    }

    for (int i = low; i <= high; ++i) {
        arr[i] = temp[i];
    }

    return inversions;
}

int mergeSort(int arr[], int temp[], int low, int high, int& comparisons) {
    int inversions = 0;
    if (low < high) {
        int mid = low + (high - low) / 2;
        inversions += mergeSort(arr, temp, low, mid, comparisons);
        inversions += mergeSort(arr, temp, mid + 1, high, comparisons);
        inversions += merge(arr, temp, low, mid, high, comparisons);
    }
    return inversions;
}

int main() {
        int t;
    cout<<"Enter the number of test cases";
    cin>>t;
    while(t){
        cout<< "Enter the size";
        int size;
        cin>>size;
        int arr[size];
        cout<<"Enter the Elements";
        for(int i =0; i<size; i++){
            cin>>arr[i];
        }
        int temp[size];
        int comparisons = 0;
        int inversions = mergeSort(arr, temp, 0, size - 1, comparisons);

        cout << "Sorted array: ";
        for (int i = 0; i < size; ++i) {
            cout << arr[i] << " ";
        }
        cout << "\nNumber of comparisons: " << comparisons << std::endl;
        cout << "Number of inversions: " << inversions << std::endl;
        t--;
    }
    return 0;
}
